webpackJsonp([0],{"jUb+":function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=r("Zrlr"),t=r.n(i),o=r("wxAW"),a=r.n(o),u=document.getElementsByTagName("canvas")[0];u.width=u.clientWidth,u.height=u.clientHeight;var v={SIM_RESOLUTION:256,DYE_RESOLUTION:1024,DENSITY_DISSIPATION:.97,VELOCITY_DISSIPATION:.98,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.3,SHADING:!0,COLORFUL:!0,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,POINTER_COLOR:{r:0,g:.15,b:0},SOUND_SENSITIVITY:.25,NORMALIZE_VOLUME:!0,AUDIO_RESPONSIVE:!0};function f(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}document.addEventListener("DOMContentLoaded",function(){window.wallpaperPropertyListener={applyUserProperties:function(e){if(e.bloom_intensity&&(v.BLOOM_INTENSITY=e.bloom_intensity.value),e.bloom_threshold&&(v.BLOOM_THRESHOLD=e.bloom_threshold.value),e.colorful&&(v.COLORFUL=e.colorful.value),e.density_diffusion&&(v.DENSITY_DISSIPATION=e.density_diffusion.value),e.enable_bloom&&(v.BLOOM=e.enable_bloom.value),e.paused&&(v.PAUSED=e.paused.value),e.pressure_diffusion&&(v.PRESSURE_DISSIPATION=e.pressure_diffusion.value),e.shading&&(v.SHADING=e.shading.value),e.splat_radius&&(v.SPLAT_RADIUS=e.splat_radius.value),e.velocity_diffusion&&(v.VELOCITY_DISSIPATION=e.velocity_diffusion.value),e.vorticity&&(v.CURL=e.vorticity.value),e.sound_sensitivity&&(v.SOUND_SENSITIVITY=e.sound_sensitivity.value),e.normalize_volume&&(v.NORMALIZE_VOLUME=e.normalize_volume.value),e.audio_responsive&&(v.AUDIO_RESPONSIVE=e.audio_responsive.value),e.simulation_resolution&&(v.SIM_RESOLUTION=e.simulation_resolution.value,de()),e.dye_resolution&&(v.DYE_RESOLUTION=e.dye_resolution.value,de()),e.default_color){var n=e.default_color.value.split(" ");console.log(Se(n[0],n[1],n[2])),(n=_e(Se(n[0],n[1],n[2])/360,1,1)).r*=.15,n.g*=.15,n.b*=.15,v.POINTER_COLOR=n}}},window.wallpaperRegisterAudioListener(function(e){if(v.AUDIO_RESPONSIVE&&!String(e[0]).startsWith("5.17")){if(v.NORMALIZE_VOLUME)for(var n=1/e[function(e){if(0===e.length)return-1;for(var n=e[0],r=0,i=1;i<e.length;i++)e[i]>n&&(r=i,n=e[i]);return r}(e)],r=0;r<e.length;r++)e[r]*=n;for(var i=0,t=0;t<10;t++)i+=e[t];i/=9,v.NORMALIZE_VOLUME?xe(parseInt(i*v.SOUND_SENSITIVITY*10)):xe(parseInt(i*v.SOUND_SENSITIVITY*2*10))}})});var l=[],m=[],c=[];l.push(new f);var s=function(e){var n={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},r=e.getContext("webgl2",n),i=!!r;i||(r=e.getContext("webgl",n)||e.getContext("experimental-webgl",n));var t=void 0,o=void 0;i?(r.getExtension("EXT_color_buffer_float"),o=r.getExtension("OES_texture_float_linear")):(t=r.getExtension("OES_texture_half_float"),o=r.getExtension("OES_texture_half_float_linear"));r.clearColor(0,0,0,1);var a=i?r.HALF_FLOAT:t.HALF_FLOAT_OES,u=void 0,v=void 0,f=void 0;i?(u=g(r,r.RGBA16F,r.RGBA,a),v=g(r,r.RG16F,r.RG,a),f=g(r,r.R16F,r.RED,a)):(u=g(r,r.RGBA,r.RGBA,a),v=g(r,r.RGBA,r.RGBA,a),f=g(r,r.RGBA,r.RGBA,a));return{gl:r,ext:{formatRGBA:u,formatRG:v,formatR:f,halfFloatTexType:a,supportLinearFiltering:o}}}(u),d=s.gl,T=s.ext;function g(e,n,r,i){if(!function(e,n,r,i){var t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,r,i,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,n,r,i))switch(n){case e.R16F:return g(e,e.RG16F,e.RG,i);case e.RG16F:return g(e,e.RGBA16F,e.RGBA,i);default:return null}return{internalFormat:n,format:r}}function h(){return/Mobi|Android/i.test(navigator.userAgent)}h()&&(v.SHADING=!1),T.supportLinearFiltering||(v.SHADING=!1,v.BLOOM=!1);var E=function(){function e(n,r){if(t()(this,e),this.uniforms={},this.program=d.createProgram(),d.attachShader(this.program,n),d.attachShader(this.program,r),d.linkProgram(this.program),!d.getProgramParameter(this.program,d.LINK_STATUS))throw d.getProgramInfoLog(this.program);for(var i=d.getProgramParameter(this.program,d.ACTIVE_UNIFORMS),o=0;o<i;o++){var a=d.getActiveUniform(this.program,o).name;this.uniforms[a]=d.getUniformLocation(this.program,a)}}return a()(e,[{key:"bind",value:function(){d.useProgram(this.program)}}]),e}();function R(e,n){var r=d.createShader(e);if(d.shaderSource(r,n),d.compileShader(r),!d.getShaderParameter(r,d.COMPILE_STATUS))throw d.getShaderInfoLog(r);return r}var p=R(d.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),x=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),D=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),_=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),S=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),y=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),A=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform vec2 texelSize;\n\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C.rgb *= diffuse;\n\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),L=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C *= diffuse;\n\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),b=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),O=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),U=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),I=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),F=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n        gl_FragColor.a = 1.0;\n    }\n"),w=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    void main () {\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        gl_FragColor = dissipation * texture2D(uSource, coord);\n        gl_FragColor.a = 1.0;\n    }\n"),N=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),B=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),C=R(d.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),M=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uncomment if you use wrap or repeat texture mode\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),P=R(d.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),G=(d.bindBuffer(d.ARRAY_BUFFER,d.createBuffer()),d.bufferData(d.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),d.STATIC_DRAW),d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,d.createBuffer()),d.bufferData(d.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),d.STATIC_DRAW),d.vertexAttribPointer(0,2,d.FLOAT,!1,0,0),d.enableVertexAttribArray(0),function(e){d.bindFramebuffer(d.FRAMEBUFFER,e),d.drawElements(d.TRIANGLES,6,d.UNSIGNED_SHORT,0)}),H=void 0,X=void 0,V=void 0,z=void 0,Y=void 0,W=void 0,k=void 0,q=void 0,K=void 0,Z=void 0,j=function(e){var n=d.createTexture();d.bindTexture(d.TEXTURE_2D,n),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.REPEAT),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.REPEAT),d.texImage2D(d.TEXTURE_2D,0,d.RGB,1,1,0,d.RGB,d.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var r={texture:n,width:1,height:1,attach:function(e){return d.activeTexture(d.TEXTURE0+e),d.bindTexture(d.TEXTURE_2D,n),e}},i=new Image;return i.onload=function(){r.width=i.width,r.height=i.height,d.bindTexture(d.TEXTURE_2D,n),d.texImage2D(d.TEXTURE_2D,0,d.RGB,d.RGB,d.UNSIGNED_BYTE,i)},i.src=e,r}("LDR_RGB1_0.png"),J=new E(p,x),Q=new E(p,D),$=new E(p,_),ee=new E(p,S),ne=new E(p,y),re=new E(p,A),ie=new E(p,L),te=new E(p,b),oe=new E(p,O),ae=new E(p,U),ue=new E(p,I),ve=new E(p,T.supportLinearFiltering?w:F),fe=new E(p,N),le=new E(p,B),me=new E(p,C),ce=new E(p,M),se=new E(p,P);function de(){var e=ye(v.SIM_RESOLUTION),n=ye(v.DYE_RESOLUTION);H=e.width,X=e.height,V=n.width,z=n.height;var r=T.halfFloatTexType,i=T.formatRGBA,t=T.formatRG,o=T.formatR,a=T.supportLinearFiltering?d.LINEAR:d.NEAREST;Y=null==Y?ge(V,z,i.internalFormat,i.format,r,a):he(Y,V,z,i.internalFormat,i.format,r,a),W=null==W?ge(H,X,t.internalFormat,t.format,r,a):he(W,H,X,t.internalFormat,t.format,r,a),k=Te(H,X,o.internalFormat,o.format,r,d.NEAREST),q=Te(H,X,o.internalFormat,o.format,r,d.NEAREST),K=ge(H,X,o.internalFormat,o.format,r,d.NEAREST),function(){var e=ye(v.BLOOM_RESOLUTION),n=T.halfFloatTexType,r=T.formatRGBA,i=T.supportLinearFiltering?d.LINEAR:d.NEAREST;Z=Te(e.width,e.height,r.internalFormat,r.format,n,i),c.length=0;for(var t=0;t<v.BLOOM_ITERATIONS;t++){var o=e.width>>t+1,a=e.height>>t+1;if(o<2||a<2)break;var u=Te(o,a,r.internalFormat,r.format,n,i);c.push(u)}}()}function Te(e,n,r,i,t,o){d.activeTexture(d.TEXTURE0);var a=d.createTexture();d.bindTexture(d.TEXTURE_2D,a),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,o),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,o),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texImage2D(d.TEXTURE_2D,0,r,e,n,0,i,t,null);var u=d.createFramebuffer();return d.bindFramebuffer(d.FRAMEBUFFER,u),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,a,0),d.viewport(0,0,e,n),d.clear(d.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:n,attach:function(e){return d.activeTexture(d.TEXTURE0+e),d.bindTexture(d.TEXTURE_2D,a),e}}}function ge(e,n,r,i,t,o){var a=Te(e,n,r,i,t,o),u=Te(e,n,r,i,t,o);return{get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function he(e,n,r,i,t,o,a){return e.read=function(e,n,r,i,t,o,a){var u=Te(n,r,i,t,o,a);return J.bind(),d.uniform1i(J.uniforms.uTexture,e.attach(0)),d.uniform1f(J.uniforms.value,1),G(u.fbo),u}(e.read,n,r,i,t,o,a),e.write=Te(n,r,i,t,o,a),e}de(),xe(parseInt(20*Math.random())+5);var Ee=Date.now();function Re(e){v.BLOOM&&function(e,n){if(c.length<2)return;var r=n;d.disable(d.BLEND),te.bind();var i=v.BLOOM_THRESHOLD*v.BLOOM_SOFT_KNEE+1e-4,t=v.BLOOM_THRESHOLD-i,o=2*i,a=.25/i;d.uniform3f(te.uniforms.curve,t,o,a),d.uniform1f(te.uniforms.threshold,v.BLOOM_THRESHOLD),d.uniform1i(te.uniforms.uTexture,e.attach(0)),d.viewport(0,0,r.width,r.height),G(r.fbo),oe.bind();for(var u=0;u<c.length;u++){var f=c[u];d.uniform2f(oe.uniforms.texelSize,1/r.width,1/r.height),d.uniform1i(oe.uniforms.uTexture,r.attach(0)),d.viewport(0,0,f.width,f.height),G(f.fbo),r=f}d.blendFunc(d.ONE,d.ONE),d.enable(d.BLEND);for(var l=c.length-2;l>=0;l--){var m=c[l];d.uniform2f(oe.uniforms.texelSize,1/r.width,1/r.height),d.uniform1i(oe.uniforms.uTexture,r.attach(0)),d.viewport(0,0,m.width,m.height),G(m.fbo),r=m}d.disable(d.BLEND),ae.bind(),d.uniform2f(ae.uniforms.texelSize,1/r.width,1/r.height),d.uniform1i(ae.uniforms.uTexture,r.attach(0)),d.uniform1f(ae.uniforms.intensity,v.BLOOM_INTENSITY),d.viewport(0,0,n.width,n.height),G(n.fbo)}(Y.read,Z),null!=e&&v.TRANSPARENT?d.disable(d.BLEND):(d.blendFunc(d.ONE,d.ONE_MINUS_SRC_ALPHA),d.enable(d.BLEND));var n=null==e?d.drawingBufferWidth:V,r=null==e?d.drawingBufferHeight:z;if(d.viewport(0,0,n,r),!v.TRANSPARENT){Q.bind();var i=v.BACK_COLOR;d.uniform4f(Q.uniforms.color,i.r/255,i.g/255,i.b/255,1),G(e)}if(null==e&&v.TRANSPARENT&&($.bind(),d.uniform1f($.uniforms.aspectRatio,u.width/u.height),G(null)),v.SHADING){var t=v.BLOOM?ie:re;if(t.bind(),d.uniform2f(t.uniforms.texelSize,1/n,1/r),d.uniform1i(t.uniforms.uTexture,Y.read.attach(0)),v.BLOOM){d.uniform1i(t.uniforms.uBloom,Z.attach(1)),d.uniform1i(t.uniforms.uDithering,j.attach(2));var o=Ae(j,n,r);d.uniform2f(t.uniforms.ditherScale,o.x,o.y)}}else{var a=v.BLOOM?ne:ee;if(a.bind(),d.uniform1i(a.uniforms.uTexture,Y.read.attach(0)),v.BLOOM){d.uniform1i(a.uniforms.uBloom,Z.attach(1)),d.uniform1i(a.uniforms.uDithering,j.attach(2));var f=Ae(j,n,r);d.uniform2f(a.uniforms.ditherScale,f.x,f.y)}}G(e)}function pe(e,n,r,i,t){d.viewport(0,0,H,X),ue.bind(),d.uniform1i(ue.uniforms.uTarget,W.read.attach(0)),d.uniform1f(ue.uniforms.aspectRatio,u.width/u.height),d.uniform2f(ue.uniforms.point,e/u.width,1-n/u.height),d.uniform3f(ue.uniforms.color,r,-i,1),d.uniform1f(ue.uniforms.radius,v.SPLAT_RADIUS/100),G(W.write.fbo),W.swap(),d.viewport(0,0,V,z),d.uniform1i(ue.uniforms.uTarget,Y.read.attach(0)),d.uniform3f(ue.uniforms.color,t.r,t.g,t.b),G(Y.write.fbo),Y.swap()}function xe(e){for(var n=0;n<e;n++){var r=De();r.r*=10,r.g*=10,r.b*=10,pe(u.width*Math.random(),u.height*Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),r)}}function De(){var e=_e(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function _e(e,n,r){var i,t,o,a,u,v=void 0,f=void 0,l=void 0;switch(o=r*(1-n),a=r*(1-(t=6*e-(i=Math.floor(6*e)))*n),u=r*(1-(1-t)*n),i%6){case 0:v=r,f=u,l=o;break;case 1:v=a,f=r,l=o;break;case 2:v=o,f=r,l=u;break;case 3:v=o,f=a,l=r;break;case 4:v=u,f=o,l=r;break;case 5:v=r,f=o,l=a}return{r:v,g:f,b:l}}function Se(e,n,r){var i=Math.min(e,n,r),t=Math.max(e,n,r),o=t-i,a=0;return a=0==o?0:t==e?(n-r)/o%6:t==n?(r-e)/o+2:(e-n)/o+4,(a=Math.round(60*a))<0&&(a+=360),a}function ye(e){var n=d.drawingBufferWidth/d.drawingBufferHeight;n<1&&(n=1/n);var r=Math.round(e*n),i=Math.round(e);return d.drawingBufferWidth>d.drawingBufferHeight?{width:r,height:i}:{width:i,height:r}}function Ae(e,n,r){return{x:n/e.width,y:r/e.height}}!function e(){u.width==u.clientWidth&&u.height==u.clientHeight||(u.width=u.clientWidth,u.height=u.clientHeight,de());!function(){m.length>0&&xe(m.pop());for(var e=0;e<l.length;e++){var n=l[e];n.moved&&(pe(n.x,n.y,n.dx,n.dy,n.color),n.moved=!1)}if(!v.COLORFUL)return;if(Ee+100<Date.now()){Ee=Date.now();for(var r=0;r<l.length;r++){var i=l[r];i.color=De()}}}();v.PAUSED||function(e){d.disable(d.BLEND),d.viewport(0,0,H,X),le.bind(),d.uniform2f(le.uniforms.texelSize,1/H,1/X),d.uniform1i(le.uniforms.uVelocity,W.read.attach(0)),G(q.fbo),me.bind(),d.uniform2f(me.uniforms.texelSize,1/H,1/X),d.uniform1i(me.uniforms.uVelocity,W.read.attach(0)),d.uniform1i(me.uniforms.uCurl,q.attach(1)),d.uniform1f(me.uniforms.curl,v.CURL),d.uniform1f(me.uniforms.dt,e),G(W.write.fbo),W.swap(),fe.bind(),d.uniform2f(fe.uniforms.texelSize,1/H,1/X),d.uniform1i(fe.uniforms.uVelocity,W.read.attach(0)),G(k.fbo),J.bind(),d.uniform1i(J.uniforms.uTexture,K.read.attach(0)),d.uniform1f(J.uniforms.value,v.PRESSURE_DISSIPATION),G(K.write.fbo),K.swap(),ce.bind(),d.uniform2f(ce.uniforms.texelSize,1/H,1/X),d.uniform1i(ce.uniforms.uDivergence,k.attach(0));for(var n=0;n<v.PRESSURE_ITERATIONS;n++)d.uniform1i(ce.uniforms.uPressure,K.read.attach(1)),G(K.write.fbo),K.swap();se.bind(),d.uniform2f(se.uniforms.texelSize,1/H,1/X),d.uniform1i(se.uniforms.uPressure,K.read.attach(0)),d.uniform1i(se.uniforms.uVelocity,W.read.attach(1)),G(W.write.fbo),W.swap(),ve.bind(),d.uniform2f(ve.uniforms.texelSize,1/H,1/X),T.supportLinearFiltering||d.uniform2f(ve.uniforms.dyeTexelSize,1/H,1/X);var r=W.read.attach(0);d.uniform1i(ve.uniforms.uVelocity,r),d.uniform1i(ve.uniforms.uSource,r),d.uniform1f(ve.uniforms.dt,e),d.uniform1f(ve.uniforms.dissipation,v.VELOCITY_DISSIPATION),G(W.write.fbo),W.swap(),d.viewport(0,0,V,z),T.supportLinearFiltering||d.uniform2f(ve.uniforms.dyeTexelSize,1/V,1/z);d.uniform1i(ve.uniforms.uVelocity,W.read.attach(0)),d.uniform1i(ve.uniforms.uSource,Y.read.attach(1)),d.uniform1f(ve.uniforms.dissipation,v.DENSITY_DISSIPATION),G(Y.write.fbo),Y.swap()}(.016);Re(null);requestAnimationFrame(e)}(),u.addEventListener("mousemove",function(e){l[0].moved=l[0].down,l[0].dx=5*(e.offsetX-l[0].x),l[0].dy=5*(e.offsetY-l[0].y),l[0].x=e.offsetX,l[0].y=e.offsetY}),u.addEventListener("touchmove",function(e){e.preventDefault();for(var n=e.targetTouches,r=0;r<n.length;r++){var i=l[r];i.moved=i.down,i.dx=8*(n[r].pageX-i.x),i.dy=8*(n[r].pageY-i.y),i.x=n[r].pageX,i.y=n[r].pageY}},!1),u.addEventListener("mouseenter",function(){l[0].down=!0,l[0].color=v.POINTER_COLOR}),u.addEventListener("touchstart",function(e){e.preventDefault();for(var n=e.targetTouches,r=0;r<n.length;r++)r>=l.length&&l.push(new f),l[r].id=n[r].identifier,l[r].down=!0,l[r].x=n[r].pageX,l[r].y=n[r].pageY,l[r].color=v.POINTER_COLOR}),u.addEventListener("mousedown",function(){xe(parseInt(20*Math.random())+5)}),window.addEventListener("mouseleave",function(){l[0].down=!1}),window.addEventListener("touchend",function(e){for(var n=e.changedTouches,r=0;r<n.length;r++)for(var i=0;i<l.length;i++)n[r].identifier==l[i].id&&(l[i].down=!1)}),window.addEventListener("keydown",function(e){"KeyP"===e.code&&(v.PAUSED=!v.PAUSED)," "===e.key&&m.push(parseInt(20*Math.random())+5)})}});